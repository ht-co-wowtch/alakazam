# http admin server
http:
  debug: true
  addr: :3112
  readTimeout: 1s
  writeTimeout: 1s

# redis server
redis:
  # redis host
  addr: :6379
  # pool內最大連線總數
  maxConns: 5
  # 最大保留的閒置連線數
  minIdleConns: 2
  # 建立連線超時多久(秒)後放棄
  dialTimeout: 2s
  # read多久(秒)沒回覆則放棄
  readTimeout: 2s
  # write多久(秒)沒回覆則放棄
  writeTimeout: 2s
  # 空閒連線多久(秒)沒做事就close
  idleTimeout: 5m

# kafka push
kafka:
  topic: "push-topic"
  brokers:
    - 127.0.0.1:9092

database:
  host: 127.0.0.1
  port: 3306
  database: alakazam
  user: root
  password: root
  charset: utf8mb4
  collation: utf8mb4_unicode_ci
  # 最大連線總數
  active: 5
  # 最大保留的閒置連線數
  idle: 2
  # 空閒連線多久(秒)沒做事就close
  idleTimeout: 2m
  slave:
    host: 127.0.0.1
    port: 3306
    user: root
    password: root
    active: 30
    idle: 10
    idleTimeout: 2m

log:
  # 開啟debug模式只會紀錄Info Level以上的log
  # 使用DPanic level時會Panic
  debug: true
  # 是否關閉log的輸出檔案代碼位置
  disableCaller: true
  # 是否關閉Warn Level(不包含)以上的stack trace message
  disableStacktrace: true
  # log採樣基數
  sampling:
    # 當前Sync log數量大於此數字就會開始採樣
    initial: 1000
    # 採樣機率
    thereafter: 100
  # Error Level(包含) 以上的log是否單獨輸出
  # 不跟Info Level(包含) 以下的log輸出在同一個位置
  errorAloneOutput: true
  # log位置
  # 如果errorAloneOutput = true 則只會有Info Level(包含) 以下 log
  # 反之則不限定Level
  outputPaths:
    - stderr
  # error log位置
  # 如果errorAloneOutput = true 則只會有Error Level(包含) 以上 log
  # 反之則只會有log處理流程中如果有發生錯誤的log
  errorOutputPaths:
    - stderr