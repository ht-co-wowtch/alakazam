syntax = "proto3";

package pb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/golang/protobuf/ptypes/empty/empty.proto";

message Proto {
    int32 op = 1 [(gogoproto.jsontag) = "op"];
    bytes body = 2 [(gogoproto.jsontag) = "body"];
}

message BroadcastReq{
    Proto proto = 1;
    int32 speed = 2;
}

message BroadcastReply{}

message BroadcastRoomReq {
    int32 roomID = 1;
    Proto proto = 2;
}

message BroadcastRoomReply{}

message RoomsReq{}

message RoomsReply {
    option (gogoproto.goproto_stringer) = false;
    map<int32,bool> rooms = 1;
}

message KeyReq {
    Proto proto = 1;
    repeated string key = 2;
}

service Comet { 
    // Ping Service 
    rpc Ping(google.protobuf.Empty) returns(google.protobuf.Empty);
    // Close websocket
    rpc Kick(KeyReq) returns(google.protobuf.Empty);
    // Broadcast send to every enrity
    rpc Broadcast(BroadcastReq) returns (BroadcastReply);
    // BroadcastRoom broadcast to one room
    rpc BroadcastRoom(BroadcastRoomReq) returns (BroadcastRoomReply);
    // Rooms get all rooms
    rpc Rooms(RoomsReq) returns (RoomsReply);
}
