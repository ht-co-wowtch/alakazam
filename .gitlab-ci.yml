image: docker:latest

services:
  - docker:dind

stages:
  - build
  - build_service
  - deploy

variables:
  REGISTRY_IMAGE: $CI_REGISTRY_IMAGE:latest
  REGISTRY_LOGIC_IMAGE: $CI_REGISTRY_IMAGE/logic
  REGISTRY_COMET_IMAGE: $CI_REGISTRY_IMAGE/comet
  REGISTRY_JOB_IMAGE: $CI_REGISTRY_IMAGE/job
  REGISTRY_ADMIN_IMAGE: $CI_REGISTRY_IMAGE/admin
  REGISTRY_MESSAGE_IMAGE: $CI_REGISTRY_IMAGE/message
  REGISTRY_SEQ_IMAGE: $CI_REGISTRY_IMAGE/seq

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

build:
  stage: build
  script:
    - docker build --build-arg "GOPROXY=$GOPROXY" --pull -t $REGISTRY_IMAGE .
    - docker push $REGISTRY_IMAGE
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

logic:
  stage: build_service
  script:
    - cd docker/logic
    - docker build --build-arg image=$REGISTRY_IMAGE -t $REGISTRY_LOGIC_IMAGE:${CI_COMMIT_TAG#v} .
    - docker push $REGISTRY_LOGIC_IMAGE:${CI_COMMIT_TAG#v}
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

comet:
  stage: build_service
  script:
    - cd docker/comet
    - docker build --build-arg image=$REGISTRY_IMAGE -t $REGISTRY_COMET_IMAGE:${CI_COMMIT_TAG#v} .
    - docker push $REGISTRY_COMET_IMAGE:${CI_COMMIT_TAG#v}
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

job:
  stage: build_service
  script:
    - cd docker/job
    - docker build --build-arg image=$REGISTRY_IMAGE -t $REGISTRY_JOB_IMAGE:${CI_COMMIT_TAG#v} .
    - docker push $REGISTRY_JOB_IMAGE:${CI_COMMIT_TAG#v}
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

admin:
  stage: build_service
  script:
    - cd docker/admin
    - docker build --build-arg image=$REGISTRY_IMAGE -t $REGISTRY_ADMIN_IMAGE:${CI_COMMIT_TAG#v} .
    - docker push $REGISTRY_ADMIN_IMAGE:${CI_COMMIT_TAG#v}
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

message:
  stage: build_service
  script:
    - cd docker/message
    - docker build --build-arg image=$REGISTRY_IMAGE -t $REGISTRY_MESSAGE_IMAGE:${CI_COMMIT_TAG#v} .
    - docker push $REGISTRY_MESSAGE_IMAGE:${CI_COMMIT_TAG#v}
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

seq:
  stage: build_service
  script:
    - cd docker/seq
    - docker build --build-arg image=$REGISTRY_IMAGE -t $REGISTRY_SEQ_IMAGE:${CI_COMMIT_TAG#v} .
    - docker push $REGISTRY_SEQ_IMAGE:${CI_COMMIT_TAG#v}
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches

deploy_develop:
  stage: deploy
  image: jetfueltw/kustomize:2.0.3
  before_script:
    - eval "$(ssh-agent -s)"
    - echo "${DEV_K8S_CD_PRIVATE_KEY}" | ssh-add - > /dev/null
    - git config --global user.email "devops@jetfuel.com.tw" && git config --global user.name "devops"
  script:
    - cd ~/ && git clone git@gitlab.com:jetfueltw/devops/k8s.git
    - cd ~/k8s && git checkout master

    - cd ~/k8s/live/${CI_PROJECT_NAME}/admin/overlays/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE/admin:${CI_COMMIT_TAG#v}
    - cat kustomization.yaml

    - cd ~/k8s/live/${CI_PROJECT_NAME}/comet/overlays/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE/comet:${CI_COMMIT_TAG#v}
    - cat kustomization.yaml

    - cd ~/k8s/live/${CI_PROJECT_NAME}/job/overlays/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE/job:${CI_COMMIT_TAG#v}
    - cat kustomization.yaml

    - cd ~/k8s/live/${CI_PROJECT_NAME}/logic/overlays/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE/logic:${CI_COMMIT_TAG#v}
    - cat kustomization.yaml

    - cd ~/k8s/live/${CI_PROJECT_NAME}/message/overlays/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE/message:${CI_COMMIT_TAG#v}
    - cat kustomization.yaml

    - cd ~/k8s/live/${CI_PROJECT_NAME}/seq/overlays/dev
    - kustomize edit set image $CI_REGISTRY_IMAGE/seq:${CI_COMMIT_TAG#v}
    - cat kustomization.yaml

    - git add -A
    - git diff-index --quiet HEAD || git commit -m 'GitLab CI/CD - DEV image update'
    - git pull --rebase origin master
    - git push origin master
  only:
    - /^v\d+\.\d+\.\d+(-[\w-]+)?$/
  except:
    - branches
